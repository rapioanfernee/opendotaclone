{"version":3,"sources":["apis/opendotaAPI.js","components/Heroes/HeroList/HeroCard.js","components/Heroes/HeroList/HeroList.js","components/Heroes/HeroDetails/HeroTile.js","components/Heroes/HeroDetails/HeroHeaderTile.js","components/Heroes/HeroDetails/HeroWinRateTile.js","components/Heroes/HeroDetails/HeroDetails.js","components/Heroes/index.js","actions/index.js","actions/action-types.js","components/App.js","reducers/index.js","reducers/heroesReducer.js","index.js"],"names":["axios","create","baseURL","HeroCard1","styled","div","_templateObject","props","heroAttr","selected","HeroIcon","_templateObject2","HeroDetails","_templateObject3","HeroCard","hero","react_default","a","createElement","style","className","onClick","id","primary_attr","src","concat","icon","alt","HeroCard_HeroDetails","fontSize","display","localized_name","toUpperCase","attack_type","color","base_str","str_gain","base_agi","agi_gain","base_int","int_gain","HeroList","_useState","useState","_useState2","Object","slicedToArray","cardSelected","setCardSelected","useEffect","onHeroClick","lib","heroes","map","index","isSelected","HeroList_HeroCard","key","HeroTile1","HeroTile_templateObject","width","height","HeroTile","children","HeroHeader","HeroDetails_HeroTile","marginTop","padding","heroImage","heroAttackRange","heroMoveSpeed","heroAttackRate","heroName","heroRoles","role","marginRight","heroBaseStr","heroStrGain","heroBaseAgi","heroAgiGain","heroBaseInt","heroIntGain","HeroWinRate","marginBottom","index_esm","styles","buildStyles","pathColor","heroColor","textColor","value","heroWinRate","text","getHeroPrimaryBaseStat","heroSelected","renderHeroImage","borderRadius","values","heroBaseAttackMin","heroBaseAttackMax","img","base_attack_min","base_attack_max","move_speed","attack_range","attack_rate","Math","round","pro_win","pro_pick","roles","getHeroStats","HeaderProps","WinRateProps","paddingTop","HeroHeaderTile","HeroWinRateTile","HeroContainer","_this","fetchHero","this","fetchHeroes","prevProps","prevState","_this2","_this$props","backgroundColor","Heroes_HeroDetails_HeroDetails","Heroes_HeroList_HeroList","margin","Component","connect","state","selectedHero","type","payload","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","opendotaAPI","get","sent","data","stop","_x","apply","arguments","App","Heroes","React","combineReducers","length","undefined","action","sortedHeroes","sort","b","objectSpread","find","toString","console","log","composeEnhancers","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"qRAEeA,WAAMC,OAAO,CAC1BC,QAAS,6mBCCX,IAAMC,EAAYC,IAAOC,IAAVC,IAUX,SAAAC,GACA,MAAuB,QAAnBA,EAAMC,SACR,6CAC4B,QAAnBD,EAAMC,SACf,6CAC4B,QAAnBD,EAAMC,SACf,kDADK,GAIP,SAAAD,GACA,OAAIA,EAAME,SACR,qBAEA,MAKAC,EAAWN,IAAOC,IAAVM,KAMRC,EAAcR,IAAOC,IAAVQ,KAsDFC,EAlDE,SAAAP,GACf,GAAIA,EAAO,KACDQ,EAASR,EAATQ,KACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAOZ,EAAMY,MAAOC,UAAWb,EAAMa,WACxCJ,EAAAC,EAAAC,cAACf,EAAD,CACEkB,QAAS,kBAAMd,EAAMc,QAAQd,EAAMe,KACnCb,SAAUF,EAAME,SAChBW,UAAU,MACVZ,SAAUO,EAAKQ,cAEfP,EAAAC,EAAAC,cAACR,EAAD,CAAUU,UAAU,kBAClBJ,EAAAC,EAAAC,cAAA,OAAKM,IAAG,wBAAAC,OAA0BV,EAAKW,MAAQC,IAAI,UAErDX,EAAAC,EAAAC,cAACU,EAAD,CAAaR,UAAU,kBACrBJ,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEU,SAAU,SAAUC,QAAS,UACzCf,EAAKgB,gBAERf,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEU,SAAU,SAAUC,QAAS,UACzCf,EAAKQ,aAAaS,cADrB,MACuCjB,EAAKkB,aAE5CjB,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEU,SAAU,OAAQK,MAAO,MAAOJ,QAAS,UACrDf,EAAKoB,SADR,MACqBpB,EAAKqB,UAE1BpB,EAAAC,EAAAC,cAAA,QACEC,MAAO,CACLU,SAAU,OACVK,MAAO,QACPJ,QAAS,UAGVf,EAAKsB,SAPR,MAOqBtB,EAAKuB,UAE1BtB,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEU,SAAU,OAAQK,MAAO,OAAQJ,QAAS,UACtDf,EAAKwB,SADR,MACqBxB,EAAKyB,aAOlC,OACExB,EAAAC,EAAAC,cAACf,EAAD,KACEa,EAAAC,EAAAC,cAACR,EAAD,cACAM,EAAAC,EAAAC,cAACU,EAAD,eC5COa,EApCE,SAAAlC,GAAS,IAAAmC,EACgBC,mBAAS,MADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjBK,EADiBH,EAAA,GACHI,EADGJ,EAAA,GAKxB,OAHAK,oBAAU,WACR1C,EAAM2C,YAAYH,KAGlB/B,EAAAC,EAAAC,cAACiC,EAAA,WAAD,CAAY/B,UAAWb,EAAMa,UAAWD,MAAOZ,EAAMY,OACnDH,EAAAC,EAAAC,cAAA,WACGX,EAAM6C,OAAOC,IAAI,SAACtC,EAAMuC,GACvB,IAAIC,GAAa,EAMjB,OAJEA,EADExC,EAAKO,KAAOyB,EAMd/B,EAAAC,EAAAC,cAACsC,EAAD,CACElC,GAAIP,EAAKO,GACTmC,IAAKH,EACLvC,KAAMA,EACNM,QAAS,SAAAC,GAEL0B,EADE1B,IAAOyB,EACO,KAEAzB,IAGpBb,SAAU8C,+OC9BxB,IAAMG,EAAYtD,IAAOC,IAAVsD,IACJ,SAAApD,GACP,OAAOA,EAAMqD,OAEL,SAAArD,GACR,OAAOA,EAAMsD,SAoBFC,EAbE,SAAAvD,GACf,OACES,EAAAC,EAAAC,cAACwC,EAAD,CACEvC,MAAOZ,EAAMY,MACbC,UAAWb,EAAMa,UACjBwC,MAAOrD,EAAMqD,MACbC,OAAQtD,EAAMsD,QAEbtD,EAAMwD,WCoCEC,EAxDI,SAAAzD,GACjB,OACES,EAAAC,EAAAC,cAAC+C,EAAD,CACE9C,MAAO,CAAE+C,UAAW,QACpBL,OAAQ,QACRzC,UAAU,gCAEVJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,MAAMD,MAAO,CAAEgD,QAAS,SACrCnD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkBb,EAAM6D,WACvCpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEW,QAAS,QAASD,SAAU,WAA3C,iBACiBtB,EAAM8D,gBADvB,UAGArD,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEW,QAAS,QAASD,SAAU,WAA3C,eACetB,EAAM+D,cADrB,OAGAtD,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEW,QAAS,QAASD,SAAU,WAA3C,gBACgBtB,EAAMgE,kBAI1BvD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oCACbJ,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEU,SAAU,SAAUC,QAAS,UACzCvB,EAAMiE,UAERjE,EAAMkE,UAAUpB,IAAI,SAAAqB,GAAI,OACvB1D,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEU,SAAU,UAAW8C,YAAa,QAC9CD,EAAM,QAIb1D,EAAAC,EAAAC,cAAA,OACEE,UAAU,mCACVD,MAAO,CAAEU,SAAU,YAEnBb,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEe,MAAO,MAAOJ,QAAS,UAAtC,QACQvB,EAAMqE,YADd,MAC8BrE,EAAMsE,aAEpC7D,EAAAC,EAAAC,cAAA,QACEC,MAAO,CACLe,MAAO,QACPJ,QAAS,UAHb,QAMQvB,EAAMuE,YANd,MAM8BvE,EAAMwE,aAEpC/D,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEe,MAAO,OAAQJ,QAAS,UAAvC,QACQvB,EAAMyE,YADd,MAC8BzE,EAAM0E,yBCtB/BC,SAvBK,SAAA3E,GAClB,OACES,EAAAC,EAAAC,cAAC+C,EAAD,CACE9C,MAAO,CAAE+C,UAAW,OAAQC,QAAS,QACrCN,OAAQ,QACRzC,UAAU,uCAEVJ,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEyC,MAAO,QAASuB,aAAc,SAC1CnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEC,OAAQC,YAAY,CAClBC,UAAWhF,EAAMiF,UACjBC,UAAWlF,EAAMiF,YAEnBE,MAAOnF,EAAMoF,YACbC,KAAI,GAAAnE,OAAKlB,EAAMoF,YAAX,QAIR3E,EAAAC,EAAAC,cAAA,0CCnBA2E,EAAyB,SAAAC,GAC7B,MAAkC,QAA9BA,EAAavE,aACRuE,EAAazD,SACmB,QAA9ByD,EAAavE,aACfuE,EAAavD,SACmB,QAA9BuD,EAAavE,aACfuE,EAAa3D,cADf,GAuEH4D,EAAkB,SAAA3B,GACtB,MAAkB,OAAdA,EAEApD,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLyC,MAAO,QACPC,OAAQ,OACRmC,aAAc,OAEhBxE,IAAK4C,EACLzC,IAAI,SAKNX,EAAAC,EAAAC,cAAA,QACEC,MAAO,CACLyC,MAAO,QACPC,OAAQ,OACRmC,aAAc,QAGf5B,IA6DMxD,EAvDK,SAAAL,GAAS,IAErB0F,EAhGa,SAAAH,GACnB,IAAI1B,EAAY,KACZ8B,EAAoB,KACpBC,EAAoB,KACpB7B,EAAgB,KAChBD,EAAkB,KAClBE,EAAiB,KACjBoB,EAAc,KACdH,EAAY,OACZhB,EAAW,KACXC,EAAY,CAAC,MACbO,EAAc,KACdJ,EAAc,KACdE,EAAc,KACdG,EAAc,KACdJ,EAAc,KACdE,EAAc,KA8BlB,OA7BIe,IACF1B,EAAS,wBAAA3C,OAA2BqE,EAAaM,KACjDF,EACEJ,EAAaO,gBAAkBR,EAAuBC,GACxDK,EACEL,EAAaQ,gBAAkBT,EAAuBC,GACxDxB,EAAgBwB,EAAaS,WAC7BlC,EAAkByB,EAAaU,aAC/BjC,EAAiBuB,EAAaW,YAC9Bd,EAAce,KAAKC,MAChBb,EAAac,QAAUd,EAAae,SAAY,KAEjB,QAA9Bf,EAAavE,aACfiE,EAAS,qBAC8B,QAA9BM,EAAavE,aACtBiE,EAAS,qBAC8B,QAA9BM,EAAavE,eACtBiE,EAAS,sBAEXhB,EAAWsB,EAAa/D,eACxB0C,EAAYqB,EAAagB,MACzB9B,EAAcc,EAAavD,SAC3BqC,EAAckB,EAAa3D,SAC3B2C,EAAcgB,EAAazD,SAC3B4C,EAAca,EAAatD,SAC3BqC,EAAciB,EAAa1D,SAC3B2C,EAAce,EAAaxD,UAGtB,CACL8B,YACA8B,oBACAC,oBACA7B,gBACAD,kBACAE,iBACAoB,cACAH,YACAhB,WACAC,YACAO,cACAJ,cACAE,cACAG,cACAJ,cACAE,eAkCagC,CADUxG,EAAjBuF,cAGN1B,EAgBE6B,EAhBF7B,UACA8B,EAeED,EAfFC,kBACAC,EAcEF,EAdFE,kBACA7B,EAaE2B,EAbF3B,cACAD,EAYE4B,EAZF5B,gBACAE,EAWE0B,EAXF1B,eACAoB,EAUEM,EAVFN,YACAH,EASES,EATFT,UACAhB,EAQEyB,EARFzB,SACAC,EAOEwB,EAPFxB,UACAO,EAMEiB,EANFjB,YACAJ,EAKEqB,EALFrB,YACAE,EAIEmB,EAJFnB,YACAG,EAGEgB,EAHFhB,YACAJ,EAEEoB,EAFFpB,YACAE,EACEkB,EADFlB,YAGIiC,EAAc,CAClB5C,UAAW2B,EAAgB3B,GAC3B8B,oBACAC,oBACA7B,gBACAD,kBACAE,iBACAC,WACAC,YACAO,cACAJ,cACAE,cACAG,cACAJ,cACAE,eAGIkC,EAAe,CACnBtB,cACAH,aAGF,OACExE,EAAAC,EAAAC,cAAA,OAAKE,UAAWb,EAAMa,WACpBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,MAAMD,MAAO,CAAE+F,WAAY,OACxClG,EAAAC,EAAAC,cAACiG,EAAmBH,GACpBhG,EAAAC,EAAAC,cAACkG,EAAoBH,IAEvBjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,MAAMD,MAAO,CAAE+F,WAAY,UCvJ1CG,6MAMJnE,YAAc,SAAA5B,GACZgG,EAAK/G,MAAMgH,UAAUjG,uFALrBkG,KAAKjH,MAAMkH,yDAEMC,EAAWC,qCAMrB,IAAAC,EAAAJ,KACP,GAAIA,KAAKjH,MAAM6C,OAAQ,KAAAyE,EACYL,KAAKjH,MAA9B6C,EADayE,EACbzE,OAAQ0C,EADK+B,EACL/B,aAEhB,OACE9E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACL2G,gBAAiB,mBACjB3D,QAAS,YAEX/C,UAAU,OAEVJ,EAAAC,EAAAC,cAAC6G,EAAD,CACEjC,aAAcA,EACd1E,UAAU,6BAEZJ,EAAAC,EAAAC,cAAC8G,EAAD,CACE7G,MAAO,CACL0C,OAAQ,OACRD,MAAO,OACPqE,OAAQ,eAEV7G,UAAU,mCACV8B,YAAa,SAAA5B,GACXsG,EAAK1E,YAAY5B,IAEnB8B,OAAQA,MAMhB,OAAOpC,EAAAC,EAAAC,cAAA,gCA3CegH,aAuDbC,cAPS,SAAAC,GACtB,MAAO,CACLhF,OAAQgF,EAAMhF,OAAOA,OACrB0C,aAAcsC,EAAMhF,OAAOiF,eAM7B,CAAEd,UCzDqB,SAAAjG,GACvB,MAAO,CACLgH,KCTsB,aDUtBC,QAASjH,IDsDEmG,YC9DY,iCAAAe,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAA6F,EAAAzH,EAAA0H,KAAM,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAAzH,EAAA8H,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,EAAYC,IAAI,cADR,OACzBN,EADyBE,EAAAK,KAE/BR,EAAS,CAAEP,KCLe,eDKKC,QAASO,EAASQ,OAFlB,wBAAAN,EAAAO,SAAAX,MAAN,gBAAAY,GAAA,OAAAhB,EAAAiB,MAAAjC,KAAAkC,YAAA,KD4DZvB,CAGbd,GGtDasC,mLAJX,OAAO3I,EAAAC,EAAAC,cAAC0I,EAAD,aAFOC,IAAM3B,kCCHT4B,cAAgB,CAC7B1G,OCEa,WAAwB,IAAvBgF,EAAuBsB,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAf,GAAIO,EAAWP,UAAAK,OAAA,EAAAL,UAAA,QAAAM,EACrC,OAAQC,EAAO3B,MACb,IHRwB,eGStB,IAAM4B,EAAeD,EAAO1B,QAAQ4B,KAAK,SAAClJ,EAAGmJ,GAAJ,OACvCnJ,EAAEc,eAAiBqI,EAAErI,eAAiB,GAAK,IAG7C,OAAOc,OAAAwH,EAAA,EAAAxH,CAAA,GACFuF,EADL,CAEEhF,OAAQ8G,IAIZ,IHlBsB,aGoBlB,IAAI7B,EADN,OAAID,EAAMhF,QAEe,OAAnB6G,EAAO1B,UACTF,EAAeD,EAAMhF,OAAOkH,KAC1B,SAAAvJ,GAAI,OAAIA,EAAKO,GAAGiJ,aAAeN,EAAO1B,QAAQgC,cAG3C1H,OAAAwH,EAAA,EAAAxH,CAAA,GACFuF,EADL,CAEEC,kBAGGxF,OAAAwH,EAAA,EAAAxH,CAAA,GACFuF,EADL,CAEEC,aAAc,OAIlB,IHpC+B,sBGqC7BmC,QAAQC,IAAIrC,GAGd,QACE,OAAOA,MChCPsC,EAAmBC,IACnBC,EAAQC,YAAYC,EAAUJ,EAAiBK,YAAgBC,OACrEC,IAASC,OACPlK,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAUP,MAAOA,GACf5J,EAAAC,EAAAC,cAACkK,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.de7e9376.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.opendota.com/api\"\r\n});\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst HeroCard1 = styled.div`\r\n  cursor: pointer;\r\n  height: 120px;\r\n  width: 65%;\r\n  background-color: white;\r\n  position: relative;\r\n  margin: 5px 5px 5px 5px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 2px;\r\n  float: right;\r\n  ${props => {\r\n    if (props.heroAttr === \"str\") {\r\n      return `border-left: 5px solid rgb(255, 121, 121);`;\r\n    } else if (props.heroAttr === \"agi\") {\r\n      return `border-left: 5px solid rgb( 121,255, 121);`;\r\n    } else if (props.heroAttr === \"int\") {\r\n      return `border-left: 5px solid rgb( 121, 121,255);`;\r\n    }\r\n  }}\r\n  ${props => {\r\n    if (props.selected) {\r\n      return `margin-right: 25px`;\r\n    } else {\r\n      return ` `;\r\n    }\r\n  }};\r\n`;\r\n\r\nconst HeroIcon = styled.div`\r\n  padding-left: 15px;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst HeroDetails = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst HeroCard = props => {\r\n  if (props) {\r\n    const { hero } = props;\r\n    return (\r\n      <div style={props.style} className={props.className}>\r\n        <HeroCard1\r\n          onClick={() => props.onClick(props.id)}\r\n          selected={props.selected}\r\n          className=\"row\"\r\n          heroAttr={hero.primary_attr}\r\n        >\r\n          <HeroIcon className=\"col-md-3 col-3\">\r\n            <img src={`http://cdn.dota2.com/${hero.icon}`} alt=\"hero\" />\r\n          </HeroIcon>\r\n          <HeroDetails className=\"col-md-9 col-9\">\r\n            <span style={{ fontSize: \"0.9rem\", display: \"block\" }}>\r\n              {hero.localized_name}\r\n            </span>\r\n            <span style={{ fontSize: \"0.9rem\", display: \"block\" }}>\r\n              {hero.primary_attr.toUpperCase()} - {hero.attack_type}\r\n            </span>\r\n            <span style={{ fontSize: \"12px\", color: \"red\", display: \"block\" }}>\r\n              {hero.base_str} + {hero.str_gain}\r\n            </span>\r\n            <span\r\n              style={{\r\n                fontSize: \"12px\",\r\n                color: \"green\",\r\n                display: \"block\"\r\n              }}\r\n            >\r\n              {hero.base_agi} + {hero.agi_gain}\r\n            </span>\r\n            <span style={{ fontSize: \"12px\", color: \"blue\", display: \"block\" }}>\r\n              {hero.base_int} + {hero.int_gain}\r\n            </span>\r\n          </HeroDetails>\r\n        </HeroCard1>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <HeroCard1>\r\n        <HeroIcon>Test1</HeroIcon>\r\n        <HeroDetails>Test</HeroDetails>\r\n      </HeroCard1>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HeroCard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nimport HeroCard from \"./HeroCard\";\r\n\r\nconst HeroList = props => {\r\n  const [cardSelected, setCardSelected] = useState(null);\r\n  useEffect(() => {\r\n    props.onHeroClick(cardSelected);\r\n  });\r\n  return (\r\n    <Scrollbars className={props.className} style={props.style}>\r\n      <div>\r\n        {props.heroes.map((hero, index) => {\r\n          let isSelected = false;\r\n          if (hero.id === cardSelected) {\r\n            isSelected = true;\r\n          } else {\r\n            isSelected = false;\r\n          }\r\n          return (\r\n            <HeroCard\r\n              id={hero.id}\r\n              key={index}\r\n              hero={hero}\r\n              onClick={id => {\r\n                if (id === cardSelected) {\r\n                  setCardSelected(null);\r\n                } else {\r\n                  setCardSelected(id);\r\n                }\r\n              }}\r\n              selected={isSelected}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </Scrollbars>\r\n  );\r\n};\r\n\r\nexport default HeroList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeroTile1 = styled.div`\r\n  width: ${props => {\r\n    return props.width;\r\n  }};\r\n  height: ${props => {\r\n    return props.height;\r\n  }};\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n`;\r\n\r\nconst HeroTile = props => {\r\n  return (\r\n    <HeroTile1\r\n      style={props.style}\r\n      className={props.className}\r\n      width={props.width}\r\n      height={props.height}\r\n    >\r\n      {props.children}\r\n    </HeroTile1>\r\n  );\r\n};\r\n\r\nexport default HeroTile;\r\n","import React from \"react\";\r\nimport HeroTile from \"./HeroTile\";\r\n\r\nconst HeroHeader = props => {\r\n  return (\r\n    <HeroTile\r\n      style={{ marginTop: \"20px\" }}\r\n      height={\"200px\"}\r\n      className=\"col-lg-7 col-md-12 col-sm-12\"\r\n    >\r\n      <div className=\"row\" style={{ padding: \"10px\" }}>\r\n        <div className=\"col-md-6 col-6\">{props.heroImage}</div>\r\n        <div className=\"col-md-6 col-6\">\r\n          <span style={{ display: \"block\", fontSize: \"0.9rem\" }}>\r\n            Attack Range: {props.heroAttackRange} units\r\n          </span>\r\n          <span style={{ display: \"block\", fontSize: \"0.9rem\" }}>\r\n            Move Speed: {props.heroMoveSpeed} ms\r\n          </span>\r\n          <span style={{ display: \"block\", fontSize: \"0.9rem\" }}>\r\n            Attack Rate: {props.heroAttackRate}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-lg-8 col-sm-8 col-8\">\r\n          <span style={{ fontSize: \"1.5rem\", display: \"block\" }}>\r\n            {props.heroName}\r\n          </span>\r\n          {props.heroRoles.map(role => (\r\n            <span style={{ fontSize: \"0.75rem\", marginRight: \"5px\" }}>\r\n              {role}{\" \"}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div\r\n          className=\"col-md-6 col-lg-4 col-sm-4 col-4\"\r\n          style={{ fontSize: \"0.75rem\" }}\r\n        >\r\n          <span style={{ color: \"red\", display: \"block\" }}>\r\n            STR: {props.heroBaseStr} + {props.heroStrGain}\r\n          </span>\r\n          <span\r\n            style={{\r\n              color: \"green\",\r\n              display: \"block\"\r\n            }}\r\n          >\r\n            AGI: {props.heroBaseAgi} + {props.heroAgiGain}\r\n          </span>\r\n          <span style={{ color: \"blue\", display: \"block\" }}>\r\n            INT: {props.heroBaseInt} + {props.heroIntGain}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </HeroTile>\r\n  );\r\n};\r\n\r\nexport default HeroHeader;\r\n","import React from \"react\";\r\n\r\nimport HeroTile from \"./HeroTile\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst HeroWinRate = props => {\r\n  return (\r\n    <HeroTile\r\n      style={{ marginTop: \"20px\", padding: \"20px\" }}\r\n      height={\"200px\"}\r\n      className=\"col-lg-4 offset-lg-1 col-md-6 col-6\"\r\n    >\r\n      <div style={{ width: \"100px\", marginBottom: \"20px\" }}>\r\n        <CircularProgressbar\r\n          styles={buildStyles({\r\n            pathColor: props.heroColor,\r\n            textColor: props.heroColor\r\n          })}\r\n          value={props.heroWinRate}\r\n          text={`${props.heroWinRate}%`}\r\n        />\r\n      </div>\r\n\r\n      <span>Win Rate on Pro Matches</span>\r\n    </HeroTile>\r\n  );\r\n};\r\n\r\nexport default HeroWinRate;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport HeroHeaderTile from \"./HeroHeaderTile\";\r\nimport HeroWinRateTile from \"./HeroWinRateTile\";\r\n\r\nconst getHeroPrimaryBaseStat = heroSelected => {\r\n  if (heroSelected.primary_attr === \"agi\") {\r\n    return heroSelected.base_agi;\r\n  } else if (heroSelected.primary_attr === \"int\") {\r\n    return heroSelected.base_int;\r\n  } else if (heroSelected.primary_attr === \"str\") {\r\n    return heroSelected.base_str;\r\n  }\r\n};\r\n\r\nconst getHeroStats = heroSelected => {\r\n  let heroImage = \"--\";\r\n  let heroBaseAttackMin = \"--\";\r\n  let heroBaseAttackMax = \"--\";\r\n  let heroMoveSpeed = \"--\";\r\n  let heroAttackRange = \"--\";\r\n  let heroAttackRate = \"--\";\r\n  let heroWinRate = \"--\";\r\n  let heroColor = \"grey\";\r\n  let heroName = \"--\";\r\n  let heroRoles = [\"--\"];\r\n  let heroBaseInt = \"--\";\r\n  let heroBaseStr = \"--\";\r\n  let heroBaseAgi = \"--\";\r\n  let heroIntGain = \"--\";\r\n  let heroStrGain = \"--\";\r\n  let heroAgiGain = \"--\";\r\n  if (heroSelected) {\r\n    heroImage = `http://cdn.dota2.com/${heroSelected.img}`;\r\n    heroBaseAttackMin =\r\n      heroSelected.base_attack_min + getHeroPrimaryBaseStat(heroSelected);\r\n    heroBaseAttackMax =\r\n      heroSelected.base_attack_max + getHeroPrimaryBaseStat(heroSelected);\r\n    heroMoveSpeed = heroSelected.move_speed;\r\n    heroAttackRange = heroSelected.attack_range;\r\n    heroAttackRate = heroSelected.attack_rate;\r\n    heroWinRate = Math.round(\r\n      (heroSelected.pro_win / heroSelected.pro_pick) * 100\r\n    );\r\n    if (heroSelected.primary_attr === \"str\") {\r\n      heroColor = `rgb( 255, 121,121)`;\r\n    } else if (heroSelected.primary_attr === \"agi\") {\r\n      heroColor = `rgb( 121, 255,121)`;\r\n    } else if (heroSelected.primary_attr === \"int\") {\r\n      heroColor = `rgb( 121, 121,255)`;\r\n    }\r\n    heroName = heroSelected.localized_name;\r\n    heroRoles = heroSelected.roles;\r\n    heroBaseInt = heroSelected.base_int;\r\n    heroBaseStr = heroSelected.base_str;\r\n    heroBaseAgi = heroSelected.base_agi;\r\n    heroIntGain = heroSelected.int_gain;\r\n    heroStrGain = heroSelected.str_gain;\r\n    heroAgiGain = heroSelected.agi_gain;\r\n  }\r\n\r\n  return {\r\n    heroImage,\r\n    heroBaseAttackMin,\r\n    heroBaseAttackMax,\r\n    heroMoveSpeed,\r\n    heroAttackRange,\r\n    heroAttackRate,\r\n    heroWinRate,\r\n    heroColor,\r\n    heroName,\r\n    heroRoles,\r\n    heroBaseInt,\r\n    heroBaseStr,\r\n    heroBaseAgi,\r\n    heroIntGain,\r\n    heroStrGain,\r\n    heroAgiGain\r\n  };\r\n};\r\n\r\nconst renderHeroImage = heroImage => {\r\n  if (heroImage !== \"--\") {\r\n    return (\r\n      <img\r\n        style={{\r\n          width: \"150px\",\r\n          height: \"85px\",\r\n          borderRadius: \"5px\"\r\n        }}\r\n        src={heroImage}\r\n        alt=\"hero\"\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <span\r\n        style={{\r\n          width: \"150px\",\r\n          height: \"85px\",\r\n          borderRadius: \"5px\"\r\n        }}\r\n      >\r\n        {heroImage}\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nconst HeroDetails = props => {\r\n  const { heroSelected } = props;\r\n  const values = getHeroStats(heroSelected);\r\n  const {\r\n    heroImage,\r\n    heroBaseAttackMin,\r\n    heroBaseAttackMax,\r\n    heroMoveSpeed,\r\n    heroAttackRange,\r\n    heroAttackRate,\r\n    heroWinRate,\r\n    heroColor,\r\n    heroName,\r\n    heroRoles,\r\n    heroBaseInt,\r\n    heroBaseStr,\r\n    heroBaseAgi,\r\n    heroIntGain,\r\n    heroStrGain,\r\n    heroAgiGain\r\n  } = values;\r\n\r\n  const HeaderProps = {\r\n    heroImage: renderHeroImage(heroImage),\r\n    heroBaseAttackMin,\r\n    heroBaseAttackMax,\r\n    heroMoveSpeed,\r\n    heroAttackRange,\r\n    heroAttackRate,\r\n    heroName,\r\n    heroRoles,\r\n    heroBaseInt,\r\n    heroBaseStr,\r\n    heroBaseAgi,\r\n    heroIntGain,\r\n    heroStrGain,\r\n    heroAgiGain\r\n  };\r\n\r\n  const WinRateProps = {\r\n    heroWinRate,\r\n    heroColor\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      <div className=\"row\" style={{ paddingTop: \"5x\" }}>\r\n        <HeroHeaderTile {...HeaderProps} />\r\n        <HeroWinRateTile {...WinRateProps} />\r\n      </div>\r\n      <div className=\"row\" style={{ paddingTop: \"5x\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroDetails;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { fetchHero, fetchHeroes } from \"../../actions\";\r\n\r\nimport HeroList from \"./HeroList/HeroList\";\r\nimport HeroDetails from \"./HeroDetails/HeroDetails\";\r\n\r\nclass HeroContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchHeroes();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  onHeroClick = id => {\r\n    this.props.fetchHero(id);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.heroes) {\r\n      const { heroes, heroSelected } = this.props;\r\n\r\n      return (\r\n        <div className=\"container\">\r\n          <div\r\n            style={{\r\n              backgroundColor: \"rgb(240,240,240)\",\r\n              padding: \"0px 20px\"\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            <HeroDetails\r\n              heroSelected={heroSelected}\r\n              className=\"col-lg-8 col-md-7 col-12\"\r\n            />\r\n            <HeroList\r\n              style={{\r\n                height: \"96vh\",\r\n                width: \"100%\",\r\n                margin: \"2vh 0 2vh 0\"\r\n              }}\r\n              className=\"col-lg-4 col-md-5 offset-4 col-8\"\r\n              onHeroClick={id => {\r\n                this.onHeroClick(id);\r\n              }}\r\n              heroes={heroes}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>Loading...</div>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    heroes: state.heroes.heroes,\r\n    heroSelected: state.heroes.selectedHero\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchHero, fetchHeroes }\r\n)(HeroContainer);\r\n","import { FETCH_HEROES, FETCH_HERO, FETCH_HERO_WIN_RATE } from \"./action-types\";\r\nimport opendotaAPI from \"../apis/opendotaAPI\";\r\n\r\nexport const fetchHeroes = () => async dispatch => {\r\n  const response = await opendotaAPI.get(\"/heroStats\");\r\n  dispatch({ type: FETCH_HEROES, payload: response.data });\r\n};\r\n\r\nexport const fetchHero = id => {\r\n  return {\r\n    type: FETCH_HERO,\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const fetchHeroWinRate = id => {\r\n  return {\r\n    type: FETCH_HERO_WIN_RATE,\r\n    payload: id\r\n  };\r\n};\r\n","export const FETCH_HEROES = \"FETCH_HEROES\";\r\nexport const FETCH_HERO = \"FETCH_HERO\";\r\nexport const FETCH_HERO_WIN_RATE = \"FETCH_HERO_WIN_RATE\";\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport HeroContainer from \"./Heroes\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <HeroContainer />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport heroesReducer from \"./heroesReducer\";\r\n\r\nexport default combineReducers({\r\n  heroes: heroesReducer\r\n});\r\n","import {\r\n  FETCH_HEROES,\r\n  FETCH_HERO,\r\n  FETCH_HERO_WIN_RATE\r\n} from \"../actions/action-types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_HEROES: {\r\n      const sortedHeroes = action.payload.sort((a, b) =>\r\n        a.localized_name > b.localized_name ? 1 : -1\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        heroes: sortedHeroes\r\n      };\r\n    }\r\n\r\n    case FETCH_HERO: {\r\n      if (state.heroes) {\r\n        let selectedHero;\r\n        if (action.payload !== null) {\r\n          selectedHero = state.heroes.find(\r\n            hero => hero.id.toString() === action.payload.toString()\r\n          );\r\n        }\r\n        return {\r\n          ...state,\r\n          selectedHero\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        selectedHero: null\r\n      };\r\n    }\r\n\r\n    case FETCH_HERO_WIN_RATE: {\r\n      console.log(state);\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composeEnhancers = compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}